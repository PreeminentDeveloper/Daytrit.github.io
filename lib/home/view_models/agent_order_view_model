import 'package:daytrit/home/models/dataModel/agent_vendor_model.dart';
import 'package:daytrit/home/models/dataModel/agent_vendor_order_model.dart';
import 'package:daytrit/home/models/error_model/fetch_data_error.dart';
import 'package:daytrit/home/repo/api_status.dart';
import 'package:daytrit/home/repo/fetch_agent_vendor_service.dart';
import 'package:flutter/material.dart';

class AgentOrderViewModel extends ChangeNotifier {
  FetchAgentVendorService service = FetchAgentVendorService();

  bool _loading = false;

  FetchDataError? _fetchDataError;
  
  AgentVendorOrderModel? _orderDataResponse;

  HomeScreenDataFailure? _homeScreenDataFailure;

  FetchDataError? get fetchDataError => _fetchDataError;

  dynamic get orders => orderDataResponse?.data;
  AgentVendorOrderModel? get orderDataResponse => _orderDataResponse;

  HomeScreenDataFailure? get userProfileFailure => _homeScreenDataFailure;

  // MyVendor? vendor;

  bool get loading => _loading;

  Map<String, dynamic>? decodedData;

  setLoading(bool loading) {
    _loading = loading;
    notifyListeners();
  }

  setOrderDataResponse(dynamic orderDataResponse) {
    return _orderDataResponse = orderDataResponse;
  }

  setFetchDataError(FetchDataError fetchDataError) =>
      _fetchDataError = fetchDataError;
  //setHomeScreenDataFailure(FetchDataError fetchDataError) => _homeScreenDataFailure = fetchDataError;

  Future<List<Data>> getOrders() async {
    setLoading(true);
    var response = await FetchAgentVendorService.getOrders();
    print("Order-response-data: $response");
    setOrderDataResponse(response.data);
    if (response is HomeScreenDataFailure) {
      FetchDataError fetchDataError = FetchDataError(message: response.message);
      setFetchDataError(fetchDataError);
    }
    setLoading(false);
    return orders;
  }
}
